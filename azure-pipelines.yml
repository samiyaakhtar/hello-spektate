trigger:
  branches:
    include:
    - '*'
  paths:
    include:
    - '*'

variables:
- group: Container Journey

pool:
  vmImage: 'ubuntu-latest'

steps:
- checkout: self
  persistCredentials: true
  clean: true

- bash: |
    echo "secret1 = $(secret1)"
    echo "secret2 = $(secret2)"
    echo "SourceBranchName = $(Build.SourceBranchName)"
    echo "SourceBranch = $(Build.SourceBranch)"
    branch_name_extracted=$(echo "${SourceBranch/refs\/head\// }")
  displayName: Extract branch name

- bash: |
    VERSION_TO_DOWNLOAD=$(curl -s "https://api.github.com/repos/CatalystCode/spk/releases/latest" | grep "tag_name" | sed -E 's/.*"([^"]+)".*/\1/')
    echo $VERSION_TO_DOWNLOAD
    echo "https://github.com/CatalystCode/spk/releases/download/v0.1.0/spk-linux"
    wget "https://github.com/CatalystCode/spk/releases/download/v0.1.0/spk-linux"
    # export PATH=$PATH:$(pwd)
    chmod +x ./spk-linux
    ./spk-linux -h
  displayName: testing
  
# - bash: |
#     git clone https://github.com/samiyaakhtar/container-journey.git
#     cd container-journey/pipeline-scripts

#     sudo /usr/bin/easy_install virtualenv
#     pip install virtualenv 
#     pip install --upgrade pip
#     python -m virtualenv venv
#     source venv/bin/activate
#     python -m pip install --upgrade pip
#     pip install -r requirements.txt

#     tag_name="hello-bedrock-$(Build.SourceBranchName)-$(Build.BuildId)"
#     commitId=$(Build.SourceVersion)
#     commitId=$(echo "${commitId:0:7}")
#     echo "python update_pipeline.py $(ACCOUNT_NAME) $(ACCOUNT_KEY) $(TABLE_NAME) $(PARTITION_KEY) p1 $(Build.BuildId) imageTag $tag_name commitId $commitId"
#     python update_pipeline.py $(ACCOUNT_NAME) $(ACCOUNT_KEY) $(TABLE_NAME) $(PARTITION_KEY) p1 $(Build.BuildId) imageTag $tag_name commitId $commitId 
#   displayName: Update source pipeline details in CJ db

# - bash: |
#     tag_name="hello-spektate-$(Build.SourceBranchName)-$(Build.BuildId)"
#     commitId=$(Build.SourceVersion)
#     commitId=$(echo "${commitId:0:7}")
#     all_data="{\"account_key\": \"$(ACCOUNT_KEY)\", \"account_name\": \"$(ACCOUNT_NAME)\", \"table_name\": \"$(TABLE_NAME)\", \"partition_key\": \"$(PARTITION_KEY)\", \"filter_name\": \"p1\", \"filter_value\": \"$(Build.BuildId)\", \"name1\": \"imageTag\", \"value1\": \"$tag_name\", \"name2\": \"commitId\", \"value2\": \"$commitId\", \"name3\": \"service\", \"value3\": \"$(Build.Repository.Name)\" }"
#     echo $all_data
#     echo "curl https://spektateprototypefunc.azurewebsites.net/api/UpdatePipelineStorage  --request POST  --header \"Content-type: application/json\"  --data $all_data"
#     curl https://spektateprototypefunc.azurewebsites.net/api/UpdatePipelineStorage  --request POST  --header "Content-type: application/json"  --data "$all_data"
#   displayName: Update source pipeline details in Spektate


- bash: |
    curl $SCRIPT > script.sh
    chmod +x ./script.sh
    tag_name="hello-spektate-$(Build.SourceBranchName)-$(Build.BuildId)"
    commitId=$(Build.SourceVersion)
    commitId=$(echo "${commitId:0:7}")
    echo "./script.sh $(ACCOUNT_NAME) $(ACCOUNT_KEY) $(TABLE_NAME) $(PARTITION_KEY) p1 $(Build.BuildId) imageTag $tag_name commitId $commitId service $(Build.Repository.Name)"
    ./script.sh $(ACCOUNT_NAME) $(ACCOUNT_KEY) $(TABLE_NAME) $(PARTITION_KEY) p1 $(Build.BuildId) imageTag $tag_name commitId $commitId service $(Build.Repository.Name)
  displayName: Update manifest pipeline details in CJ db
  env:
    SCRIPT: https://raw.githubusercontent.com/samiyaakhtar/spk/686-simply-pipelines/scripts/update_introspection.sh



- task: Docker@2
  inputs:
    containerRegistry: 'hellorings_acr'
    repository: 'hellospektate'
    command: 'buildAndPush'
    Dockerfile: '**/src/Dockerfile'
    tags: 'hello-spektate-$(Build.SourceBranchName)-$(Build.BuildId)'
  condition: ne(variables['Build.Reason'], 'PullRequest')
